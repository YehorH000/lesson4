# SSL certificates for development
<<<<<<< HEAD
# $ mkcert dv-campus-css.local www.dv-campus-css.local
=======
# $ mkcert dv-campus.local www.dv-campus.local
>>>>>>> UIBrush with grunt
#
# DEVELOPMENT:
# $ docker-compose -f docker-compose.yml -f docker-compose-dev.yml up -d
#
# PRODUCTION:
# $ docker-compose up -d
#
# MacOS (development only)
# docker-sync-stack start
version: '3.7'
services:
  php-apache:
<<<<<<< HEAD
    container_name: dv-campus-css.local
=======
    container_name: dv-campus.local
>>>>>>> UIBrush with grunt
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        # needed for the build stage
        # Install memcached inside container if needed. Better to use external Memcached container and only have
        # php extension to connect to it
        - MEMCACHED=0
    restart: always
    labels:
      # - traefik.enable=false
<<<<<<< HEAD
      - traefik.http.frontend.rule=Host:dv-campus-css.local,www.dv-campus-css.local
      - traefik.http.frontend.entryPoints=http
      - traefik.https.frontend.rule=Host:dv-campus-css.local,www.dv-campus-css.local
=======
      - traefik.http.frontend.rule=Host:dv-campus.local,www.dv-campus.local
      - traefik.http.frontend.entryPoints=http
      - traefik.https.frontend.rule=Host:dv-campus.local,www.dv-campus.local
>>>>>>> UIBrush with grunt
      - traefik.https.frontend.entryPoints=https
      - traefik.https.protocol=https
      - traefik.https.port=443
    # Must add extra_hosts to be written to /etc/hosts - otherwise containerized application can not curl itself
    extra_hosts:
<<<<<<< HEAD
      - "dv-campus-css.local www.dv-campus-css.local:127.0.0.1"
=======
      - "dv-campus.local www.dv-campus.local:127.0.0.1"
>>>>>>> UIBrush with grunt
#    links:
#      - memcached
    external_links:
      - mysql57:mysql
#    networks:
#      - reverse-proxy
    network_mode: bridge
    volumes:
      - .:/var/www/html
      - /misc/share/ssl:/certs
      - ./docker/virtual-host.conf:/etc/apache2/sites-enabled/virtual-host.conf

#  memcached:
#    image: 'memcached:1.5'
#    network_mode: bridge
#    restart: always

#networks:
#  reverse-proxy:
#    external: true